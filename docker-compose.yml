version: '3'

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
    driver: local

services:
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.17.16
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: "true"
      xpack.security.transport.ssl.enabled: "true"
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: "elastic"
    networks:
      - elk

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.17.16
    ports:
      - 5000:5000
      - 9600:9600
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    container_name: kibana
    image: kibana:7.17.16
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elk

  nestjs-app:
    container_name: nestjs-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    # environment:
    #   - APP_ENV=${APP_ENV}
    #   - JDBC_URL=${JDBC_URL}
    #   - DB_USER=${DB_USER}
    #   - DB_PASSWORD=${DB_PASSWORD}
    #   - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./logs:/app/logs
    depends_on:
      - elasticsearch
    networks:
      - elk