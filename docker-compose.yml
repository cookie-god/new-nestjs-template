version: '3.7'

services:
  #########################################################################
  # Elasticsearch
  #########################################################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: es
    environment:
      - discovery.type=single-node     # 단일 노드 모드
      - xpack.security.enabled=false   # 보안 인증 비활성화
      - xpack.security.transport.ssl.enabled=false
      # 메모리 설정 (필요 시 조절)
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk

  #########################################################################
  # Kibana
  #########################################################################
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kb
    depends_on:
      - elasticsearch
    environment:
      # Kibana가 연결할 Elasticsearch URL
      - ELASTICSEARCH_HOSTS=http://es:9200
    ports:
      - "5601:5601"
    networks:
      - elk

  #########################################################################
  # Logstash
  #########################################################################
  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.2
    container_name: ls
    depends_on:
      - elasticsearch
    ports:
      - "5000:5000"    # TCP input 포트
      - "9600:9600"    # Logstash monitoring API
    volumes:
      # 로컬의 pipeline/logstash.conf 를 컨테이너 내부로 마운트
      - ./pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    networks:
      - elk


  nestjs-app:
    container_name: nestjs-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - logstash
    networks:
      - elk

networks:
  elk:

volumes:
  esdata: